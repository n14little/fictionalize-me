name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  Unit-Tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint check
        run: npm run lint

      - name: Type check
        run: npm run type-check

      - name: Run unit tests
        run: npm run test:unit

  Integration-Tests:
    runs-on: ubuntu-latest
    needs: Unit-Tests
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Create .env.local file from secret
        run: |
          echo "${{ secrets.ENV_FOR_ATS }}" | base64 -d > .env.local

      - name: Install dependencies
        run: npm ci

      - name: Start docker services
        run: docker compose up -d postgres

      - name: Wait for services to be ready
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          sleep 30

      - name: Run database migrations
        run: npm run db:migrate

      - name: Run Integration Tests
        run: npm run test:integration
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/fictionalize_me

      - name: Stop docker services
        if: always()
        run: docker compose down

  E2E-Tests:
    runs-on: ubuntu-latest
    needs: Unit-Tests
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Create .env.local file from secret
        run: |
          echo "${{ secrets.ENV_FOR_ATS }}" | base64 -d > .env.local

      - name: Install dependencies
        run: npm ci

      - name: Start docker services
        run: docker compose up -d

      - name: Wait for services to be ready
        run: |
          echo "Waiting for services to be ready..."
          sleep 30

      - name: Run database migrations
        run: npm run db:migrate

      - name: Run E2E tests
        run: npm run e2e:ci

      - name: Stop docker services
        if: always()
        run: docker compose down
